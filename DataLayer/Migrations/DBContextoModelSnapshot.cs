// <auto-generated />
using System;
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(DBContexto))]
    partial class DBContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Entity.Colaborador", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<int?>("SituacaoRegistroId");

                    b.Property<int?>("TipoColaboradorId");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("SituacaoRegistroId");

                    b.HasIndex("TipoColaboradorId");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("DataLayer.Entity.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Hora");

                    b.Property<int?>("MedicoId");

                    b.Property<int?>("PacienteId");

                    b.Property<string>("RelatoPaciente");

                    b.HasKey("ConsultaId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("DataLayer.Entity.ConsultaExame", b =>
                {
                    b.Property<int>("ConsultaExameId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultaId");

                    b.Property<DateTime>("DataEntrega");

                    b.Property<bool>("Entregue");

                    b.Property<int?>("ExameId");

                    b.HasKey("ConsultaExameId");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("ExameId");

                    b.ToTable("ConsultaExame");
                });

            modelBuilder.Entity("DataLayer.Entity.ConsultaMedicamento", b =>
                {
                    b.Property<int>("ConsultaMedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConsultaId");

                    b.Property<int?>("MedicamentoId");

                    b.Property<string>("Posologia");

                    b.HasKey("ConsultaMedicamentoId");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("MedicamentoId");

                    b.ToTable("ConsultaMedicamento");
                });

            modelBuilder.Entity("DataLayer.Entity.Especialidade", b =>
                {
                    b.Property<int>("EspecialidadeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("EspecialidadeId");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("DataLayer.Entity.Exame", b =>
                {
                    b.Property<int>("ExameId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descricao");

                    b.HasKey("ExameId");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("DataLayer.Entity.Medicamento", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fornecedor");

                    b.Property<string>("NomeComercial");

                    b.Property<string>("NomeGenerico");

                    b.HasKey("MedicamentoId");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("DataLayer.Entity.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CRM")
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime>("DataInativacao");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SituacaoRegistroId");

                    b.HasKey("MedicoId");

                    b.HasIndex("SituacaoRegistroId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("DataLayer.Entity.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Documento")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Responsavel")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("TipoDocumentoId");

                    b.Property<int?>("TipoTelefone1TipoTelefoneId");

                    b.Property<int?>("TipoTelefone2TipoTelefoneId");

                    b.Property<int?>("TituloResponsavelTipoResponsavelId");

                    b.HasKey("PacienteId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoTelefone1TipoTelefoneId");

                    b.HasIndex("TipoTelefone2TipoTelefoneId");

                    b.HasIndex("TituloResponsavelTipoResponsavelId");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("DataLayer.Entity.SituacaoRegistro", b =>
                {
                    b.Property<int>("SituacaoRegistroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(25)");

                    b.HasKey("SituacaoRegistroId");

                    b.ToTable("SituacaoRegistro");
                });

            modelBuilder.Entity("DataLayer.Entity.TipoColaborador", b =>
                {
                    b.Property<int>("TipoColaboradorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("TipoColaboradorId");

                    b.ToTable("TipoColaborador");
                });

            modelBuilder.Entity("DataLayer.Entity.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(25)");

                    b.HasKey("TipoDocumentoId");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("DataLayer.Entity.TipoResponsavel", b =>
                {
                    b.Property<int>("TipoResponsavelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(25)");

                    b.HasKey("TipoResponsavelId");

                    b.ToTable("TipoResponsavel");
                });

            modelBuilder.Entity("DataLayer.Entity.TipoTelefone", b =>
                {
                    b.Property<int>("TipoTelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("TipoTelefoneId");

                    b.ToTable("TipoTelefone");
                });

            modelBuilder.Entity("DataLayer.Entity.Colaborador", b =>
                {
                    b.HasOne("DataLayer.Entity.SituacaoRegistro", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoRegistroId");

                    b.HasOne("DataLayer.Entity.TipoColaborador", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoColaboradorId");
                });

            modelBuilder.Entity("DataLayer.Entity.Consulta", b =>
                {
                    b.HasOne("DataLayer.Entity.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("DataLayer.Entity.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("DataLayer.Entity.ConsultaExame", b =>
                {
                    b.HasOne("DataLayer.Entity.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("ConsultaId");

                    b.HasOne("DataLayer.Entity.Exame", "Exame")
                        .WithMany()
                        .HasForeignKey("ExameId");
                });

            modelBuilder.Entity("DataLayer.Entity.ConsultaMedicamento", b =>
                {
                    b.HasOne("DataLayer.Entity.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("ConsultaId");

                    b.HasOne("DataLayer.Entity.Medicamento", "Medicamento")
                        .WithMany()
                        .HasForeignKey("MedicamentoId");
                });

            modelBuilder.Entity("DataLayer.Entity.Medico", b =>
                {
                    b.HasOne("DataLayer.Entity.SituacaoRegistro", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoRegistroId");
                });

            modelBuilder.Entity("DataLayer.Entity.Paciente", b =>
                {
                    b.HasOne("DataLayer.Entity.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.HasOne("DataLayer.Entity.TipoTelefone", "TipoTelefone1")
                        .WithMany()
                        .HasForeignKey("TipoTelefone1TipoTelefoneId");

                    b.HasOne("DataLayer.Entity.TipoTelefone", "TipoTelefone2")
                        .WithMany()
                        .HasForeignKey("TipoTelefone2TipoTelefoneId");

                    b.HasOne("DataLayer.Entity.TipoResponsavel", "TituloResponsavel")
                        .WithMany()
                        .HasForeignKey("TituloResponsavelTipoResponsavelId");
                });
#pragma warning restore 612, 618
        }
    }
}
